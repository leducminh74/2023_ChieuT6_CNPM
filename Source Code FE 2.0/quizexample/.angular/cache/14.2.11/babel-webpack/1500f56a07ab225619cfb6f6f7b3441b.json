{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/utils/areconnectedthroughproperties\n */\n\n/* globals console */\nimport getSubNodes from './getsubnodes';\n/**\n * Traverses both structures to find out whether there is a reference that is shared between both structures.\n */\n\nexport default function areConnectedThroughProperties(target1, target2, excludedNodes = new Set()) {\n  if (target1 === target2 && isObject(target1)) {\n    return true;\n  } // @if CK_DEBUG_WATCHDOG // return checkConnectionBetweenProps( target1, target2, excludedNodes );\n\n\n  const subNodes1 = getSubNodes(target1, excludedNodes);\n  const subNodes2 = getSubNodes(target2, excludedNodes);\n\n  for (const node of subNodes1) {\n    if (subNodes2.has(node)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/* istanbul ignore next -- @preserve */\n// eslint-disable-next-line\n\nfunction checkConnectionBetweenProps(target1, target2, excludedNodes) {\n  const {\n    subNodes: subNodes1,\n    prevNodeMap: prevNodeMap1\n  } = getSubNodes(target1, excludedNodes.subNodes);\n  const {\n    subNodes: subNodes2,\n    prevNodeMap: prevNodeMap2\n  } = getSubNodes(target2, excludedNodes.subNodes);\n\n  for (const sharedNode of subNodes1) {\n    if (subNodes2.has(sharedNode)) {\n      const connection = [];\n      connection.push(sharedNode);\n      let node = prevNodeMap1.get(sharedNode);\n\n      while (node && node !== target1) {\n        connection.push(node);\n        node = prevNodeMap1.get(node);\n      }\n\n      node = prevNodeMap2.get(sharedNode);\n\n      while (node && node !== target2) {\n        connection.unshift(node);\n        node = prevNodeMap2.get(node);\n      }\n\n      console.log('--------');\n      console.log({\n        target1\n      });\n      console.log({\n        sharedNode\n      });\n      console.log({\n        target2\n      });\n      console.log({\n        connection\n      });\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isObject(structure) {\n  return typeof structure === 'object' && structure !== null;\n}","map":{"version":3,"names":["getSubNodes","areConnectedThroughProperties","target1","target2","excludedNodes","Set","isObject","subNodes1","subNodes2","node","has","checkConnectionBetweenProps","subNodes","prevNodeMap","prevNodeMap1","prevNodeMap2","sharedNode","connection","push","get","unshift","console","log","structure"],"sources":["D:/FE-Workspace/quizexample/node_modules/@ckeditor/ckeditor5-watchdog/src/utils/areconnectedthroughproperties.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module watchdog/utils/areconnectedthroughproperties\n */\n/* globals console */\nimport getSubNodes from './getsubnodes';\n/**\n * Traverses both structures to find out whether there is a reference that is shared between both structures.\n */\nexport default function areConnectedThroughProperties(target1, target2, excludedNodes = new Set()) {\n    if (target1 === target2 && isObject(target1)) {\n        return true;\n    }\n    // @if CK_DEBUG_WATCHDOG // return checkConnectionBetweenProps( target1, target2, excludedNodes );\n    const subNodes1 = getSubNodes(target1, excludedNodes);\n    const subNodes2 = getSubNodes(target2, excludedNodes);\n    for (const node of subNodes1) {\n        if (subNodes2.has(node)) {\n            return true;\n        }\n    }\n    return false;\n}\n/* istanbul ignore next -- @preserve */\n// eslint-disable-next-line\nfunction checkConnectionBetweenProps(target1, target2, excludedNodes) {\n    const { subNodes: subNodes1, prevNodeMap: prevNodeMap1 } = getSubNodes(target1, excludedNodes.subNodes);\n    const { subNodes: subNodes2, prevNodeMap: prevNodeMap2 } = getSubNodes(target2, excludedNodes.subNodes);\n    for (const sharedNode of subNodes1) {\n        if (subNodes2.has(sharedNode)) {\n            const connection = [];\n            connection.push(sharedNode);\n            let node = prevNodeMap1.get(sharedNode);\n            while (node && node !== target1) {\n                connection.push(node);\n                node = prevNodeMap1.get(node);\n            }\n            node = prevNodeMap2.get(sharedNode);\n            while (node && node !== target2) {\n                connection.unshift(node);\n                node = prevNodeMap2.get(node);\n            }\n            console.log('--------');\n            console.log({ target1 });\n            console.log({ sharedNode });\n            console.log({ target2 });\n            console.log({ connection });\n            return true;\n        }\n    }\n    return false;\n}\nfunction isObject(structure) {\n    return typeof structure === 'object' && structure !== null;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA;AACA;AACA;;AACA,eAAe,SAASC,6BAAT,CAAuCC,OAAvC,EAAgDC,OAAhD,EAAyDC,aAAa,GAAG,IAAIC,GAAJ,EAAzE,EAAoF;EAC/F,IAAIH,OAAO,KAAKC,OAAZ,IAAuBG,QAAQ,CAACJ,OAAD,CAAnC,EAA8C;IAC1C,OAAO,IAAP;EACH,CAH8F,CAI/F;;;EACA,MAAMK,SAAS,GAAGP,WAAW,CAACE,OAAD,EAAUE,aAAV,CAA7B;EACA,MAAMI,SAAS,GAAGR,WAAW,CAACG,OAAD,EAAUC,aAAV,CAA7B;;EACA,KAAK,MAAMK,IAAX,IAAmBF,SAAnB,EAA8B;IAC1B,IAAIC,SAAS,CAACE,GAAV,CAAcD,IAAd,CAAJ,EAAyB;MACrB,OAAO,IAAP;IACH;EACJ;;EACD,OAAO,KAAP;AACH;AACD;AACA;;AACA,SAASE,2BAAT,CAAqCT,OAArC,EAA8CC,OAA9C,EAAuDC,aAAvD,EAAsE;EAClE,MAAM;IAAEQ,QAAQ,EAAEL,SAAZ;IAAuBM,WAAW,EAAEC;EAApC,IAAqDd,WAAW,CAACE,OAAD,EAAUE,aAAa,CAACQ,QAAxB,CAAtE;EACA,MAAM;IAAEA,QAAQ,EAAEJ,SAAZ;IAAuBK,WAAW,EAAEE;EAApC,IAAqDf,WAAW,CAACG,OAAD,EAAUC,aAAa,CAACQ,QAAxB,CAAtE;;EACA,KAAK,MAAMI,UAAX,IAAyBT,SAAzB,EAAoC;IAChC,IAAIC,SAAS,CAACE,GAAV,CAAcM,UAAd,CAAJ,EAA+B;MAC3B,MAAMC,UAAU,GAAG,EAAnB;MACAA,UAAU,CAACC,IAAX,CAAgBF,UAAhB;MACA,IAAIP,IAAI,GAAGK,YAAY,CAACK,GAAb,CAAiBH,UAAjB,CAAX;;MACA,OAAOP,IAAI,IAAIA,IAAI,KAAKP,OAAxB,EAAiC;QAC7Be,UAAU,CAACC,IAAX,CAAgBT,IAAhB;QACAA,IAAI,GAAGK,YAAY,CAACK,GAAb,CAAiBV,IAAjB,CAAP;MACH;;MACDA,IAAI,GAAGM,YAAY,CAACI,GAAb,CAAiBH,UAAjB,CAAP;;MACA,OAAOP,IAAI,IAAIA,IAAI,KAAKN,OAAxB,EAAiC;QAC7Bc,UAAU,CAACG,OAAX,CAAmBX,IAAnB;QACAA,IAAI,GAAGM,YAAY,CAACI,GAAb,CAAiBV,IAAjB,CAAP;MACH;;MACDY,OAAO,CAACC,GAAR,CAAY,UAAZ;MACAD,OAAO,CAACC,GAAR,CAAY;QAAEpB;MAAF,CAAZ;MACAmB,OAAO,CAACC,GAAR,CAAY;QAAEN;MAAF,CAAZ;MACAK,OAAO,CAACC,GAAR,CAAY;QAAEnB;MAAF,CAAZ;MACAkB,OAAO,CAACC,GAAR,CAAY;QAAEL;MAAF,CAAZ;MACA,OAAO,IAAP;IACH;EACJ;;EACD,OAAO,KAAP;AACH;;AACD,SAASX,QAAT,CAAkBiB,SAAlB,EAA6B;EACzB,OAAO,OAAOA,SAAP,KAAqB,QAArB,IAAiCA,SAAS,KAAK,IAAtD;AACH"},"metadata":{},"sourceType":"module"}