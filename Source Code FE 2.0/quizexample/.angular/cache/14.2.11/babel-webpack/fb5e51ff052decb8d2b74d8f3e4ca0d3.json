{"ast":null,"code":"import _asyncToGenerator from \"D:/FE-Workspace/quizexample/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, Input, Output, NgModule } from '@angular/core';\nimport { EditorWatchdog } from '@ckeditor/ckeditor5-watchdog';\nimport { first } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n/**\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n// A copy of @ckeditor/ckeditor5-utils/src/uid.js\n// A hash table of hex numbers to avoid using toString() in uid() which is costly.\n// [ '00', '01', '02', ..., 'fe', 'ff' ]\n\nfunction CKEditorComponent_ng_template_0_Template(rf, ctx) {}\n\nconst HEX_NUMBERS = new Array(256).fill(0).map((val, index) => ('0' + index.toString(16)).slice(-2));\n/**\n * Returns a unique id. The id starts with an \"e\" character and a randomly generated string of\n * 32 alphanumeric characters.\n *\n * **Note**: The characters the unique id is built from correspond to the hex number notation\n * (from \"0\" to \"9\", from \"a\" to \"f\"). In other words, each id corresponds to an \"e\" followed\n * by 16 8-bit numbers next to each other.\n *\n * @returns An unique id string.\n */\n\nfunction uid() {\n  // Let's create some positive random 32bit integers first.\n  //\n  // 1. Math.random() is a float between 0 and 1.\n  // 2. 0x100000000 is 2^32 = 4294967296.\n  // 3. >>> 0 enforces integer (in JS all numbers are floating point).\n  //\n  // For instance:\n  //\t\tMath.random() * 0x100000000 = 3366450031.853859\n  // but\n  //\t\tMath.random() * 0x100000000 >>> 0 = 3366450031.\n  const r1 = Math.random() * 0x100000000 >>> 0;\n  const r2 = Math.random() * 0x100000000 >>> 0;\n  const r3 = Math.random() * 0x100000000 >>> 0;\n  const r4 = Math.random() * 0x100000000 >>> 0; // Make sure that id does not start with number.\n\n  return 'e' + HEX_NUMBERS[r1 >> 0 & 0xFF] + HEX_NUMBERS[r1 >> 8 & 0xFF] + HEX_NUMBERS[r1 >> 16 & 0xFF] + HEX_NUMBERS[r1 >> 24 & 0xFF] + HEX_NUMBERS[r2 >> 0 & 0xFF] + HEX_NUMBERS[r2 >> 8 & 0xFF] + HEX_NUMBERS[r2 >> 16 & 0xFF] + HEX_NUMBERS[r2 >> 24 & 0xFF] + HEX_NUMBERS[r3 >> 0 & 0xFF] + HEX_NUMBERS[r3 >> 8 & 0xFF] + HEX_NUMBERS[r3 >> 16 & 0xFF] + HEX_NUMBERS[r3 >> 24 & 0xFF] + HEX_NUMBERS[r4 >> 0 & 0xFF] + HEX_NUMBERS[r4 >> 8 & 0xFF] + HEX_NUMBERS[r4 >> 16 & 0xFF] + HEX_NUMBERS[r4 >> 24 & 0xFF];\n}\n\nconst ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID = 'Lock from Angular integration (@ckeditor/ckeditor5-angular)';\n\nclass CKEditorComponent {\n  constructor(elementRef, ngZone) {\n    /**\n     * The configuration of the editor.\n     * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editorconfig-EditorConfig.html\n     * to learn more.\n     */\n    this.config = {};\n    /**\n     * The initial data of the editor. Useful when not using the ngModel.\n     * See https://angular.io/api/forms/NgModel to learn more.\n     */\n\n    this.data = '';\n    /**\n     * Tag name of the editor component.\n     *\n     * The default tag is 'div'.\n     */\n\n    this.tagName = 'div';\n    /**\n     * Allows disabling the two-way data binding mechanism. Disabling it can boost performance for large documents.\n     *\n     * When a component is connected using the [(ngModel)] or [formControl] directives and this value is set to true then none of the data\n     * will ever be synchronized.\n     *\n     * An integrator must call `editor.data.get()` manually once the application needs the editor's data.\n     * An editor instance can be received in the `ready()` callback.\n     */\n\n    this.disableTwoWayDataBinding = false;\n    /**\n     * Fires when the editor is ready. It corresponds with the `editor#ready`\n     * https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#event-ready\n     * event.\n     */\n\n    this.ready = new EventEmitter();\n    /**\n     * Fires when the content of the editor has changed. It corresponds with the `editor.model.document#change`\n     * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_model_document-Document.html#event-change\n     * event.\n     */\n\n    this.change = new EventEmitter();\n    /**\n     * Fires when the editing view of the editor is blurred. It corresponds with the `editor.editing.view.document#blur`\n     * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:blur\n     * event.\n     */\n\n    this.blur = new EventEmitter();\n    /**\n     * Fires when the editing view of the editor is focused. It corresponds with the `editor.editing.view.document#focus`\n     * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:focus\n     * event.\n     */\n\n    this.focus = new EventEmitter();\n    /**\n     * Fires when the editor component crashes.\n     */\n\n    this.error = new EventEmitter();\n    /**\n     * If the component is read–only before the editor instance is created, it remembers that state,\n     * so the editor can become read–only once it is ready.\n     */\n\n    this.initiallyDisabled = false;\n    /**\n     * A lock flag preventing from calling the `cvaOnChange()` during setting editor data.\n     */\n\n    this.isEditorSettingData = false;\n    this.id = uid();\n    this.ngZone = ngZone;\n    this.elementRef = elementRef; // To avoid issues with the community typings and CKEditor 5, let's treat window as any. See #342.\n\n    const {\n      CKEDITOR_VERSION\n    } = window;\n\n    if (CKEDITOR_VERSION) {\n      const [major] = CKEDITOR_VERSION.split('.').map(Number);\n\n      if (major < 37) {\n        console.warn('The <CKEditor> component requires using CKEditor 5 in version 37 or higher.');\n      }\n    } else {\n      console.warn('Cannot find the \"CKEDITOR_VERSION\" in the \"window\" scope.');\n    }\n  }\n  /**\n   * When set `true`, the editor becomes read-only.\n   * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#member-isReadOnly\n   * to learn more.\n   */\n\n\n  set disabled(isDisabled) {\n    this.setDisabledState(isDisabled);\n  }\n\n  get disabled() {\n    if (this.editorInstance) {\n      return this.editorInstance.isReadOnly;\n    }\n\n    return this.initiallyDisabled;\n  }\n  /**\n   * The instance of the editor created by this component.\n   */\n\n\n  get editorInstance() {\n    let editorWatchdog = this.editorWatchdog;\n\n    if (this.watchdog) {\n      // Temporarily use the `_watchdogs` internal map as the `getItem()` method throws\n      // an error when the item is not registered yet.\n      // See https://github.com/ckeditor/ckeditor5-angular/issues/177.\n      // TODO should be able to change when new chages in Watcdog are released.\n      editorWatchdog = this.watchdog._watchdogs.get(this.id);\n    }\n\n    if (editorWatchdog) {\n      return editorWatchdog.editor;\n    }\n\n    return null;\n  } // Implementing the OnChanges interface. Whenever the `data` property is changed, update the editor content.\n\n\n  ngOnChanges(changes) {\n    if (Object.prototype.hasOwnProperty.call(changes, 'data') && changes.data && !changes.data.isFirstChange()) {\n      this.writeValue(changes.data.currentValue);\n    }\n  } // Implementing the AfterViewInit interface.\n\n\n  ngAfterViewInit() {\n    this.attachToWatchdog();\n  } // Implementing the OnDestroy interface.\n\n\n  ngOnDestroy() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.watchdog) {\n        yield _this.watchdog.remove(_this.id);\n      } else if (_this.editorWatchdog && _this.editorWatchdog.editor) {\n        yield _this.editorWatchdog.destroy();\n        _this.editorWatchdog = undefined;\n      }\n    })();\n  } // Implementing the ControlValueAccessor interface (only when binding to ngModel).\n\n\n  writeValue(value) {\n    // This method is called with the `null` value when the form resets.\n    // A component's responsibility is to restore to the initial state.\n    if (value === null) {\n      value = '';\n    } // If already initialized.\n\n\n    if (this.editorInstance) {\n      // The lock mechanism prevents from calling `cvaOnChange()` during changing\n      // the editor state. See #139\n      this.isEditorSettingData = true;\n      this.editorInstance.data.set(value);\n      this.isEditorSettingData = false;\n    } // If not, wait for it to be ready; store the data.\n    else {\n      // If the editor element is already available, then update its content.\n      this.data = value; // If not, then wait until it is ready\n      // and change data only for the first `ready` event.\n\n      this.ready.pipe(first()).subscribe(editor => {\n        editor.data.set(this.data);\n      });\n    }\n  } // Implementing the ControlValueAccessor interface (only when binding to ngModel).\n\n\n  registerOnChange(callback) {\n    this.cvaOnChange = callback;\n  } // Implementing the ControlValueAccessor interface (only when binding to ngModel).\n\n\n  registerOnTouched(callback) {\n    this.cvaOnTouched = callback;\n  } // Implementing the ControlValueAccessor interface (only when binding to ngModel).\n\n\n  setDisabledState(isDisabled) {\n    // If already initialized.\n    if (this.editorInstance) {\n      if (isDisabled) {\n        this.editorInstance.enableReadOnlyMode(ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID);\n      } else {\n        this.editorInstance.disableReadOnlyMode(ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID);\n      }\n    } // Store the state anyway to use it once the editor is created.\n\n\n    this.initiallyDisabled = isDisabled;\n  }\n  /**\n   * Creates the editor instance, sets initial editor data, then integrates\n   * the editor with the Angular component. This method does not use the `editor.data.set()`\n   * because of the issue in the collaboration mode (#6).\n   */\n\n\n  attachToWatchdog() {\n    var _this2 = this;\n\n    // TODO: elementOrData parameter type can be simplified to HTMLElemen after templated Watchdog will be released.\n    const creator = (elementOrData, config) => {\n      return this.ngZone.runOutsideAngular( /*#__PURE__*/_asyncToGenerator(function* () {\n        _this2.elementRef.nativeElement.appendChild(elementOrData);\n\n        const editor = yield _this2.editor.create(elementOrData, config);\n\n        if (_this2.initiallyDisabled) {\n          editor.enableReadOnlyMode(ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID);\n        }\n\n        _this2.ngZone.run(() => {\n          _this2.ready.emit(editor);\n        });\n\n        _this2.setUpEditorEvents(editor);\n\n        return editor;\n      }));\n    };\n\n    const destructor = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (editor) {\n        yield editor.destroy();\n\n        _this2.elementRef.nativeElement.removeChild(_this2.editorElement);\n      });\n\n      return function destructor(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    const emitError = () => {\n      this.ngZone.run(() => {\n        this.error.emit();\n      });\n    };\n\n    const element = document.createElement(this.tagName);\n    const config = this.getConfig();\n    this.editorElement = element; // Based on the presence of the watchdog decide how to initialize the editor.\n\n    if (this.watchdog) {\n      // When the context watchdog is passed add the new item to it based on the passed configuration.\n      this.watchdog.add({\n        id: this.id,\n        type: 'editor',\n        creator,\n        destructor,\n        sourceElementOrData: element,\n        config\n      });\n      this.watchdog.on('itemError', (_, {\n        itemId\n      }) => {\n        if (itemId === this.id) {\n          emitError();\n        }\n      });\n    } else {\n      // In the other case create the watchdog by hand to keep the editor running.\n      const editorWatchdog = new EditorWatchdog(this.editor, this.editorWatchdogConfig);\n      editorWatchdog.setCreator(creator);\n      editorWatchdog.setDestructor(destructor);\n      editorWatchdog.on('error', emitError);\n      this.editorWatchdog = editorWatchdog;\n      this.editorWatchdog.create(element, config);\n    }\n  }\n\n  getConfig() {\n    if (this.data && this.config.initialData) {\n      throw new Error('Editor data should be provided either using `config.initialData` or `data` properties.');\n    }\n\n    const config = { ...this.config\n    }; // Merge two possible ways of providing data into the `config.initialData` field.\n\n    const initialData = this.config.initialData || this.data;\n\n    if (initialData) {\n      // Define the `config.initialData` only when the initial content is specified.\n      config.initialData = initialData;\n    }\n\n    return config;\n  }\n  /**\n   * Integrates the editor with the component by attaching related event listeners.\n   */\n\n\n  setUpEditorEvents(editor) {\n    const modelDocument = editor.model.document;\n    const viewDocument = editor.editing.view.document;\n    modelDocument.on('change:data', evt => {\n      this.ngZone.run(() => {\n        if (this.disableTwoWayDataBinding) {\n          return;\n        }\n\n        if (this.cvaOnChange && !this.isEditorSettingData) {\n          const data = editor.data.get();\n          this.cvaOnChange(data);\n        }\n\n        this.change.emit({\n          event: evt,\n          editor\n        });\n      });\n    });\n    viewDocument.on('focus', evt => {\n      this.ngZone.run(() => {\n        this.focus.emit({\n          event: evt,\n          editor\n        });\n      });\n    });\n    viewDocument.on('blur', evt => {\n      this.ngZone.run(() => {\n        if (this.cvaOnTouched) {\n          this.cvaOnTouched();\n        }\n\n        this.blur.emit({\n          event: evt,\n          editor\n        });\n      });\n    });\n  }\n\n}\n\nCKEditorComponent.ɵfac = function CKEditorComponent_Factory(t) {\n  return new (t || CKEditorComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nCKEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CKEditorComponent,\n  selectors: [[\"ckeditor\"]],\n  inputs: {\n    editor: \"editor\",\n    config: \"config\",\n    data: \"data\",\n    tagName: \"tagName\",\n    watchdog: \"watchdog\",\n    editorWatchdogConfig: \"editorWatchdogConfig\",\n    disableTwoWayDataBinding: \"disableTwoWayDataBinding\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    ready: \"ready\",\n    change: \"change\",\n    blur: \"blur\",\n    focus: \"focus\",\n    error: \"error\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => CKEditorComponent),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 0,\n  template: function CKEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CKEditorComponent_ng_template_0_Template, 0, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CKEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ckeditor',\n      template: '<ng-template></ng-template>',\n      // Integration with @angular/forms.\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => CKEditorComponent),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    editor: [{\n      type: Input\n    }],\n    config: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    tagName: [{\n      type: Input\n    }],\n    watchdog: [{\n      type: Input\n    }],\n    editorWatchdogConfig: [{\n      type: Input\n    }],\n    disableTwoWayDataBinding: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    ready: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    error: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n\nclass CKEditorModule {}\n\nCKEditorModule.ɵfac = function CKEditorModule_Factory(t) {\n  return new (t || CKEditorModule)();\n};\n\nCKEditorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CKEditorModule\n});\nCKEditorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[FormsModule, CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CKEditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [FormsModule, CommonModule],\n      declarations: [CKEditorComponent],\n      exports: [CKEditorComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CKEditorComponent, CKEditorModule };","map":{"version":3,"names":["i0","EventEmitter","forwardRef","Component","Input","Output","NgModule","EditorWatchdog","first","NG_VALUE_ACCESSOR","FormsModule","CommonModule","HEX_NUMBERS","Array","fill","map","val","index","toString","slice","uid","r1","Math","random","r2","r3","r4","ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID","CKEditorComponent","constructor","elementRef","ngZone","config","data","tagName","disableTwoWayDataBinding","ready","change","blur","focus","error","initiallyDisabled","isEditorSettingData","id","CKEDITOR_VERSION","window","major","split","Number","console","warn","disabled","isDisabled","setDisabledState","editorInstance","isReadOnly","editorWatchdog","watchdog","_watchdogs","get","editor","ngOnChanges","changes","Object","prototype","hasOwnProperty","call","isFirstChange","writeValue","currentValue","ngAfterViewInit","attachToWatchdog","ngOnDestroy","remove","destroy","undefined","value","set","pipe","subscribe","registerOnChange","callback","cvaOnChange","registerOnTouched","cvaOnTouched","enableReadOnlyMode","disableReadOnlyMode","creator","elementOrData","runOutsideAngular","nativeElement","appendChild","create","run","emit","setUpEditorEvents","destructor","removeChild","editorElement","emitError","element","document","createElement","getConfig","add","type","sourceElementOrData","on","_","itemId","editorWatchdogConfig","setCreator","setDestructor","initialData","Error","modelDocument","model","viewDocument","editing","view","evt","event","ɵfac","ElementRef","NgZone","ɵcmp","provide","useExisting","multi","args","selector","template","providers","CKEditorModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["D:/FE-Workspace/quizexample/node_modules/@ckeditor/ckeditor5-angular/fesm2020/ckeditor-ckeditor5-angular.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, Input, Output, NgModule } from '@angular/core';\nimport { EditorWatchdog } from '@ckeditor/ckeditor5-watchdog';\nimport { first } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n// A copy of @ckeditor/ckeditor5-utils/src/uid.js\n// A hash table of hex numbers to avoid using toString() in uid() which is costly.\n// [ '00', '01', '02', ..., 'fe', 'ff' ]\nconst HEX_NUMBERS = new Array(256).fill(0)\n    .map((val, index) => ('0' + (index).toString(16)).slice(-2));\n/**\n * Returns a unique id. The id starts with an \"e\" character and a randomly generated string of\n * 32 alphanumeric characters.\n *\n * **Note**: The characters the unique id is built from correspond to the hex number notation\n * (from \"0\" to \"9\", from \"a\" to \"f\"). In other words, each id corresponds to an \"e\" followed\n * by 16 8-bit numbers next to each other.\n *\n * @returns An unique id string.\n */\nfunction uid() {\n    // Let's create some positive random 32bit integers first.\n    //\n    // 1. Math.random() is a float between 0 and 1.\n    // 2. 0x100000000 is 2^32 = 4294967296.\n    // 3. >>> 0 enforces integer (in JS all numbers are floating point).\n    //\n    // For instance:\n    //\t\tMath.random() * 0x100000000 = 3366450031.853859\n    // but\n    //\t\tMath.random() * 0x100000000 >>> 0 = 3366450031.\n    const r1 = Math.random() * 0x100000000 >>> 0;\n    const r2 = Math.random() * 0x100000000 >>> 0;\n    const r3 = Math.random() * 0x100000000 >>> 0;\n    const r4 = Math.random() * 0x100000000 >>> 0;\n    // Make sure that id does not start with number.\n    return 'e' +\n        HEX_NUMBERS[r1 >> 0 & 0xFF] +\n        HEX_NUMBERS[r1 >> 8 & 0xFF] +\n        HEX_NUMBERS[r1 >> 16 & 0xFF] +\n        HEX_NUMBERS[r1 >> 24 & 0xFF] +\n        HEX_NUMBERS[r2 >> 0 & 0xFF] +\n        HEX_NUMBERS[r2 >> 8 & 0xFF] +\n        HEX_NUMBERS[r2 >> 16 & 0xFF] +\n        HEX_NUMBERS[r2 >> 24 & 0xFF] +\n        HEX_NUMBERS[r3 >> 0 & 0xFF] +\n        HEX_NUMBERS[r3 >> 8 & 0xFF] +\n        HEX_NUMBERS[r3 >> 16 & 0xFF] +\n        HEX_NUMBERS[r3 >> 24 & 0xFF] +\n        HEX_NUMBERS[r4 >> 0 & 0xFF] +\n        HEX_NUMBERS[r4 >> 8 & 0xFF] +\n        HEX_NUMBERS[r4 >> 16 & 0xFF] +\n        HEX_NUMBERS[r4 >> 24 & 0xFF];\n}\n\nconst ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID = 'Lock from Angular integration (@ckeditor/ckeditor5-angular)';\nclass CKEditorComponent {\n    constructor(elementRef, ngZone) {\n        /**\n         * The configuration of the editor.\n         * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editorconfig-EditorConfig.html\n         * to learn more.\n         */\n        this.config = {};\n        /**\n         * The initial data of the editor. Useful when not using the ngModel.\n         * See https://angular.io/api/forms/NgModel to learn more.\n         */\n        this.data = '';\n        /**\n         * Tag name of the editor component.\n         *\n         * The default tag is 'div'.\n         */\n        this.tagName = 'div';\n        /**\n         * Allows disabling the two-way data binding mechanism. Disabling it can boost performance for large documents.\n         *\n         * When a component is connected using the [(ngModel)] or [formControl] directives and this value is set to true then none of the data\n         * will ever be synchronized.\n         *\n         * An integrator must call `editor.data.get()` manually once the application needs the editor's data.\n         * An editor instance can be received in the `ready()` callback.\n         */\n        this.disableTwoWayDataBinding = false;\n        /**\n         * Fires when the editor is ready. It corresponds with the `editor#ready`\n         * https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#event-ready\n         * event.\n         */\n        this.ready = new EventEmitter();\n        /**\n         * Fires when the content of the editor has changed. It corresponds with the `editor.model.document#change`\n         * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_model_document-Document.html#event-change\n         * event.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Fires when the editing view of the editor is blurred. It corresponds with the `editor.editing.view.document#blur`\n         * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:blur\n         * event.\n         */\n        this.blur = new EventEmitter();\n        /**\n         * Fires when the editing view of the editor is focused. It corresponds with the `editor.editing.view.document#focus`\n         * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:focus\n         * event.\n         */\n        this.focus = new EventEmitter();\n        /**\n         * Fires when the editor component crashes.\n         */\n        this.error = new EventEmitter();\n        /**\n         * If the component is read–only before the editor instance is created, it remembers that state,\n         * so the editor can become read–only once it is ready.\n         */\n        this.initiallyDisabled = false;\n        /**\n         * A lock flag preventing from calling the `cvaOnChange()` during setting editor data.\n         */\n        this.isEditorSettingData = false;\n        this.id = uid();\n        this.ngZone = ngZone;\n        this.elementRef = elementRef;\n        // To avoid issues with the community typings and CKEditor 5, let's treat window as any. See #342.\n        const { CKEDITOR_VERSION } = window;\n        if (CKEDITOR_VERSION) {\n            const [major] = CKEDITOR_VERSION.split('.').map(Number);\n            if (major < 37) {\n                console.warn('The <CKEditor> component requires using CKEditor 5 in version 37 or higher.');\n            }\n        }\n        else {\n            console.warn('Cannot find the \"CKEDITOR_VERSION\" in the \"window\" scope.');\n        }\n    }\n    /**\n     * When set `true`, the editor becomes read-only.\n     * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#member-isReadOnly\n     * to learn more.\n     */\n    set disabled(isDisabled) {\n        this.setDisabledState(isDisabled);\n    }\n    get disabled() {\n        if (this.editorInstance) {\n            return this.editorInstance.isReadOnly;\n        }\n        return this.initiallyDisabled;\n    }\n    /**\n     * The instance of the editor created by this component.\n     */\n    get editorInstance() {\n        let editorWatchdog = this.editorWatchdog;\n        if (this.watchdog) {\n            // Temporarily use the `_watchdogs` internal map as the `getItem()` method throws\n            // an error when the item is not registered yet.\n            // See https://github.com/ckeditor/ckeditor5-angular/issues/177.\n            // TODO should be able to change when new chages in Watcdog are released.\n            editorWatchdog = this.watchdog._watchdogs.get(this.id);\n        }\n        if (editorWatchdog) {\n            return editorWatchdog.editor;\n        }\n        return null;\n    }\n    // Implementing the OnChanges interface. Whenever the `data` property is changed, update the editor content.\n    ngOnChanges(changes) {\n        if (Object.prototype.hasOwnProperty.call(changes, 'data') && changes.data && !changes.data.isFirstChange()) {\n            this.writeValue(changes.data.currentValue);\n        }\n    }\n    // Implementing the AfterViewInit interface.\n    ngAfterViewInit() {\n        this.attachToWatchdog();\n    }\n    // Implementing the OnDestroy interface.\n    async ngOnDestroy() {\n        if (this.watchdog) {\n            await this.watchdog.remove(this.id);\n        }\n        else if (this.editorWatchdog && this.editorWatchdog.editor) {\n            await this.editorWatchdog.destroy();\n            this.editorWatchdog = undefined;\n        }\n    }\n    // Implementing the ControlValueAccessor interface (only when binding to ngModel).\n    writeValue(value) {\n        // This method is called with the `null` value when the form resets.\n        // A component's responsibility is to restore to the initial state.\n        if (value === null) {\n            value = '';\n        }\n        // If already initialized.\n        if (this.editorInstance) {\n            // The lock mechanism prevents from calling `cvaOnChange()` during changing\n            // the editor state. See #139\n            this.isEditorSettingData = true;\n            this.editorInstance.data.set(value);\n            this.isEditorSettingData = false;\n        }\n        // If not, wait for it to be ready; store the data.\n        else {\n            // If the editor element is already available, then update its content.\n            this.data = value;\n            // If not, then wait until it is ready\n            // and change data only for the first `ready` event.\n            this.ready\n                .pipe(first())\n                .subscribe(editor => {\n                editor.data.set(this.data);\n            });\n        }\n    }\n    // Implementing the ControlValueAccessor interface (only when binding to ngModel).\n    registerOnChange(callback) {\n        this.cvaOnChange = callback;\n    }\n    // Implementing the ControlValueAccessor interface (only when binding to ngModel).\n    registerOnTouched(callback) {\n        this.cvaOnTouched = callback;\n    }\n    // Implementing the ControlValueAccessor interface (only when binding to ngModel).\n    setDisabledState(isDisabled) {\n        // If already initialized.\n        if (this.editorInstance) {\n            if (isDisabled) {\n                this.editorInstance.enableReadOnlyMode(ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID);\n            }\n            else {\n                this.editorInstance.disableReadOnlyMode(ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID);\n            }\n        }\n        // Store the state anyway to use it once the editor is created.\n        this.initiallyDisabled = isDisabled;\n    }\n    /**\n     * Creates the editor instance, sets initial editor data, then integrates\n     * the editor with the Angular component. This method does not use the `editor.data.set()`\n     * because of the issue in the collaboration mode (#6).\n     */\n    attachToWatchdog() {\n        // TODO: elementOrData parameter type can be simplified to HTMLElemen after templated Watchdog will be released.\n        const creator = ((elementOrData, config) => {\n            return this.ngZone.runOutsideAngular(async () => {\n                this.elementRef.nativeElement.appendChild(elementOrData);\n                const editor = await this.editor.create(elementOrData, config);\n                if (this.initiallyDisabled) {\n                    editor.enableReadOnlyMode(ANGULAR_INTEGRATION_READ_ONLY_LOCK_ID);\n                }\n                this.ngZone.run(() => {\n                    this.ready.emit(editor);\n                });\n                this.setUpEditorEvents(editor);\n                return editor;\n            });\n        });\n        const destructor = async (editor) => {\n            await editor.destroy();\n            this.elementRef.nativeElement.removeChild(this.editorElement);\n        };\n        const emitError = () => {\n            this.ngZone.run(() => {\n                this.error.emit();\n            });\n        };\n        const element = document.createElement(this.tagName);\n        const config = this.getConfig();\n        this.editorElement = element;\n        // Based on the presence of the watchdog decide how to initialize the editor.\n        if (this.watchdog) {\n            // When the context watchdog is passed add the new item to it based on the passed configuration.\n            this.watchdog.add({\n                id: this.id,\n                type: 'editor',\n                creator,\n                destructor,\n                sourceElementOrData: element,\n                config\n            });\n            this.watchdog.on('itemError', (_, { itemId }) => {\n                if (itemId === this.id) {\n                    emitError();\n                }\n            });\n        }\n        else {\n            // In the other case create the watchdog by hand to keep the editor running.\n            const editorWatchdog = new EditorWatchdog(this.editor, this.editorWatchdogConfig);\n            editorWatchdog.setCreator(creator);\n            editorWatchdog.setDestructor(destructor);\n            editorWatchdog.on('error', emitError);\n            this.editorWatchdog = editorWatchdog;\n            this.editorWatchdog.create(element, config);\n        }\n    }\n    getConfig() {\n        if (this.data && this.config.initialData) {\n            throw new Error('Editor data should be provided either using `config.initialData` or `data` properties.');\n        }\n        const config = { ...this.config };\n        // Merge two possible ways of providing data into the `config.initialData` field.\n        const initialData = this.config.initialData || this.data;\n        if (initialData) {\n            // Define the `config.initialData` only when the initial content is specified.\n            config.initialData = initialData;\n        }\n        return config;\n    }\n    /**\n     * Integrates the editor with the component by attaching related event listeners.\n     */\n    setUpEditorEvents(editor) {\n        const modelDocument = editor.model.document;\n        const viewDocument = editor.editing.view.document;\n        modelDocument.on('change:data', evt => {\n            this.ngZone.run(() => {\n                if (this.disableTwoWayDataBinding) {\n                    return;\n                }\n                if (this.cvaOnChange && !this.isEditorSettingData) {\n                    const data = editor.data.get();\n                    this.cvaOnChange(data);\n                }\n                this.change.emit({ event: evt, editor });\n            });\n        });\n        viewDocument.on('focus', evt => {\n            this.ngZone.run(() => {\n                this.focus.emit({ event: evt, editor });\n            });\n        });\n        viewDocument.on('blur', evt => {\n            this.ngZone.run(() => {\n                if (this.cvaOnTouched) {\n                    this.cvaOnTouched();\n                }\n                this.blur.emit({ event: evt, editor });\n            });\n        });\n    }\n}\nCKEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: CKEditorComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nCKEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.4.0\", type: CKEditorComponent, selector: \"ckeditor\", inputs: { editor: \"editor\", config: \"config\", data: \"data\", tagName: \"tagName\", watchdog: \"watchdog\", editorWatchdogConfig: \"editorWatchdogConfig\", disableTwoWayDataBinding: \"disableTwoWayDataBinding\", disabled: \"disabled\" }, outputs: { ready: \"ready\", change: \"change\", blur: \"blur\", focus: \"focus\", error: \"error\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            useExisting: forwardRef(() => CKEditorComponent),\n            multi: true\n        }\n    ], usesOnChanges: true, ngImport: i0, template: '<ng-template></ng-template>', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: CKEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ckeditor',\n                    template: '<ng-template></ng-template>',\n                    // Integration with @angular/forms.\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => CKEditorComponent),\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { editor: [{\n                type: Input\n            }], config: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], tagName: [{\n                type: Input\n            }], watchdog: [{\n                type: Input\n            }], editorWatchdogConfig: [{\n                type: Input\n            }], disableTwoWayDataBinding: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], ready: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], error: [{\n                type: Output\n            }] } });\n\n/**\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nclass CKEditorModule {\n}\nCKEditorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: CKEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCKEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: CKEditorModule, declarations: [CKEditorComponent], imports: [FormsModule, CommonModule], exports: [CKEditorComponent] });\nCKEditorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: CKEditorModule, imports: [[FormsModule, CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: CKEditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [FormsModule, CommonModule],\n                    declarations: [CKEditorComponent],\n                    exports: [CKEditorComponent]\n                }]\n        }] });\n\n/**\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CKEditorComponent, CKEditorModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}